<?php/* * ******************  double check for tidiness * ******************* */class Api_TwitterFeed {	private $user_name = "";	private $rss_link = "http://twitter.com/statuses/user_timeline/%s.rss";	private $feed = "";	public function __construct ($user_name = "")	{		if (is_string ($user_name))		{			$this -> user_name = $user_name;		}		else		{			die ("ERROR :: TwitterFeed.construct :: Argument is not a string");		}	}// end construct -----------------------------------------------------------------------------------------  end constuct	public function setUser ($user_name)	{		if (is_string ($user_name))		{			$this -> user_name = $user_name;			return $this;		}		else		{			die ("Error ::  TwitterFeed.setUser :: Argument is not a string");		}	}// end setUser ------------------------------------------------------------------------------------------- end setUser	public function getTweets ($return_feed = true, $limit_num = 25)	{		$rss = sprintf ($this -> rss_link, $this -> user_name);		// supress any xml load errors, since twitter is less than reliable.		$this -> feed = @simplexml_load_file ($rss);		// check $return_feed variable to determine if return value will be the xml object		// or the TwitterFeed object so as to enable chaining or simply store feed solely		// inside TwitterFeed object		return ($return_feed) ? $this -> feed : $this;	}// end getTweets ----------------------------------------------------------------------------------------- end getTweets	public function showTweet ($item_num = 0)	{		echo substr ($this -> feed -> channel -> item[$item_num] -> title, strlen ($this -> user_name) + 1);	}// end showTweets ---------------------------------------------------------------------------------------- end showTweets}// end class/*  end file*/