<?phpclass Utility_Validator {    public function __construct()    {    }        /*     *  @$request : array of the request (be it POST, GET, or otherwise)     *  @validationData : array to be compared against request. This will     *                    contain the key/field, regex to text value, and     *  an error message to be passed if regex test fails.     *  $valudationData = array('keyName'=>'[value]', 'regex'=>'[value]', 'errorMsg'=>'[value]')     */    public function validateRequest($request, $validationData)    {        $validationResults = array();                        foreach($validationData as $key=>$value){            if(array_has_key($key, $request)){                               $passedTest =  (preg_match($value['regex'], $request[$key]))? true : false;                              $tempArray = array($key=>array('didPass', $passedTest, 'errorMsg', $value['errorMsg']));                               array_push($validationResults, $tempArray);            }                    }                  return json_encode($validationResults);            }        public function validateEmail($email)    {        return preg_match('/^[a-zA-Z0-9]{1,40}@[a-zA-Z0-9]{1,40}\.[a-zA-Z]{2,5}$/', $email);    }        public  function validatePhone($phone)    {        return preg_match('/^[1-9][0-9]{2}-[0-9]{4}$/', $phone);    }        public  function validateString($string, $filter)    {        if(is_string($string) && is_string($filter))        {            return preg_match($filter, $string);        }        else        {            return false;                    }    }    /*     *  basic helper wrapper to compare types     */    public function validateDataType($type, $obj)    {        return (gettype($type) == gettype($obj));    }}/* end file*/